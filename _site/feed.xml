<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>고개의 블로그</title>
    <description>고개의 개발 블로그입니다.
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 22 Jun 2023 22:37:52 +0900</pubDate>
    <lastBuildDate>Thu, 22 Jun 2023 22:37:52 +0900</lastBuildDate>
    <generator>Jekyll v3.9.3</generator>
    
      <item>
        <title>[Java] 연산자</title>
        <description>&lt;h1 id=&quot;연산자&quot;&gt;연산자&lt;/h1&gt;

&lt;h3 id=&quot;부호-연산자&quot;&gt;부호 연산자&lt;/h3&gt;

&lt;p&gt;부호 연산자는 단항 연산자로 변수의 부호를 유지하거나 바꿀 때 사용됩니다.&lt;/p&gt;

&lt;p&gt;+ 연산은 잘 사용되지 않고, - 연산자는 변수값의 부호를 변경할 때 사용됩니다. 부호를 변경하는 것도 연산이므로 자동 타입 변환에 주의해야 합니다. (byte, short, int 타입의 연산 결과는 int 타입)&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 컴파일 에러&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;증감-연산자&quot;&gt;증감 연산자&lt;/h3&gt;

&lt;p&gt;증감 연산자(++, –)는 변수의 값을 1 증가시키거나 1 감소시키는 연산자입니다. 단독으로 증감 연산자를 사용할 경우에는 문제가 없지만 여러 연산자가 있을 경우 증감 연산자의 위치에 따라 결과가 달라질 수 있기 때문에 주의해야 합니다.&lt;/p&gt;

&lt;p&gt;증감 연산자가 변수 앞에 있으면 먼저 변수를 1 증가 또는 1 감소시킨 후 다른 연산을 수행합니다. 증감 연산자가 변수 뒤에 있으면 모든 연산을 끝낸 후 변수를 1 증가 또는 1 감소시킵니다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 11&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 11&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 20&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 21&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;산술-연산자&quot;&gt;산술 연산자&lt;/h3&gt;

&lt;p&gt;산술 연산자는 더하기(+), 빼기(-), 곱하기(*), 나누기(/), 나머지(%)가 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 13&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 7&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 30&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 3&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;산술 연산자를 정확하게 계산하고 싶다면 실수 타입을 사용하지 않는 것이 좋습니다. 실수 타입은 부동 소수점 방식을 사용하여 나타내는 데 항상 오차가 존재하기 때문입니다.&lt;/p&gt;

&lt;h3 id=&quot;오버플로우overflow와-언더플로우underflow&quot;&gt;오버플로우(overflow)와 언더플로우(underflow)&lt;/h3&gt;

&lt;p&gt;오버플로우란 타입이 허용하는 최댓값을 벗어나는 것을 말합니다. 언더플로우는 타입이 허용하는 최솟값을 벗어나는 것을 말합니다. 정수 타입에서 오버플로우 또는 언더플로우가 발생되면 실행 에러가 일어나지 않고 해당 정수 타입의 최댓값 또는 최솟값으로 돌아갑니다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;127&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// -128&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;비교관계-연산자&quot;&gt;비교(관계) 연산자&lt;/h3&gt;

&lt;p&gt;비교 연산자는 두 개의 피연산자 사이에서 크기(&amp;gt;, &amp;gt;=, &amp;lt;, &amp;lt;=) 및 동등(==, !=) 관계를 평가해 true 또는 false 를 산출하는 이항 연산자이다. 비교 연산자는 흐름 제어문인 조건문(if), 반복문(for, while)에서 실행 흐름을 제어할 때 주로 사용된다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;구분&lt;/th&gt;
      &lt;th&gt;연산식&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;동등비교&lt;/td&gt;
      &lt;td&gt;==&lt;/td&gt;
      &lt;td&gt;두 개 항의 값이 같으면 true, 다르면 false를 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;동등비교&lt;/td&gt;
      &lt;td&gt;!=&lt;/td&gt;
      &lt;td&gt;두 개 항의 값이 다르면 true, 같으면 false를 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;크기비교&lt;/td&gt;
      &lt;td&gt;&amp;gt;&lt;/td&gt;
      &lt;td&gt;왼쪽 항이 크면 true, 같거나 작으면 false를 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;크기비교&lt;/td&gt;
      &lt;td&gt;&amp;gt;=&lt;/td&gt;
      &lt;td&gt;왼쪽 항이 크거나 같으면 true, 작으면 false를 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;크기비교&lt;/td&gt;
      &lt;td&gt;&amp;lt;&lt;/td&gt;
      &lt;td&gt;왼쪽 항이 작으면 true, 같거나 크면 false를 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;크기비교&lt;/td&gt;
      &lt;td&gt;&amp;lt;=&lt;/td&gt;
      &lt;td&gt;왼쪽 항이 작거나 같으면 true, 크면 false를 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;피연산자의 타입이 다를 경우에는 비교 연산을 수행하기 전에 타입을 일치시킵니다. 예를 들어 10 == 10.0 을 비교한다며 10을 double 타입인 10.0으로 변환한 다음 10.0 == 10.0 으로 비교한다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;논리-연산자&quot;&gt;논리 연산자&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;논리 연산자는 논리곱(&amp;amp;&amp;amp;), 논리합(&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;), 배타적 논리합(^) 그리고 논리 부정(!) 연산을 수행합니다. 논리 연산도 흐름 제어문인 조건문(if), 반복문(for, while) 등에서 주로 사용됩니다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;구분&lt;/th&gt;
      &lt;th&gt;연산식&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;AND(논리곱)&lt;/td&gt;
      &lt;td&gt;&amp;amp;&amp;amp;&lt;/td&gt;
      &lt;td&gt;피연산자 모두가 true일 경우에만 연산 결과가 true&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;OR(논리합)&lt;/td&gt;
      &lt;td&gt;||&lt;/td&gt;
      &lt;td&gt;피연산자 중 하나만 true이면 연산 결과는 true&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;XOR(배타적 논리합)&lt;/td&gt;
      &lt;td&gt;^&lt;/td&gt;
      &lt;td&gt;피연산자가 하나는 true이고 다른 하나가 false일 경우에만 true&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NOT(논리 부정)&lt;/td&gt;
      &lt;td&gt;!&lt;/td&gt;
      &lt;td&gt;피연산자의 논리값을 바꿉니다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;비트-논리-연산자&quot;&gt;비트 논리 연산자&lt;/h3&gt;

&lt;p&gt;비트 논리 연산자는 bit 단위로 논리 연산을 수행합니다. 0과 1이 피연산자가 되므로 2진수 0과 1로 저장되는 정수 타입(byte, short, int, long)만 피연산자가 될 수 있고, 부동 소수점 방식으로 저장되는 실수 타입(float, double)은 피연산자가 될 수 없습니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;구분&lt;/th&gt;
      &lt;th&gt;연산식&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;AND(논리곱)&lt;/td&gt;
      &lt;td&gt;&amp;amp;&lt;/td&gt;
      &lt;td&gt;두 비트 모두 1일 경우에만 연산 결과가 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;OR(논리합)&lt;/td&gt;
      &lt;td&gt;|&lt;/td&gt;
      &lt;td&gt;두 비트 중 하나만 1이면 연산 결과는 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;XOR(배타적 논리합)&lt;/td&gt;
      &lt;td&gt;^&lt;/td&gt;
      &lt;td&gt;두 비트 중 하나는 1이고 다른 하나가 0일 경우 연산 결과는 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NOT(논리 부정)&lt;/td&gt;
      &lt;td&gt;~&lt;/td&gt;
      &lt;td&gt;보수&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;비트-이동-연산자&quot;&gt;비트 이동 연산자&lt;/h3&gt;

&lt;p&gt;비트 이동 연산자는 비트를 왼쪽 또는 오른쪽으로 이동시키는 연산을 수행합니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;연산식&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;a « b&lt;/td&gt;
      &lt;td&gt;a의 각 비트를 b만큼 왼쪽으로 이동&lt;br /&gt;오른쪽 빈자리는 0으로 채움&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;a » b&lt;/td&gt;
      &lt;td&gt;a의 각 비트를 b만큼 오른쪽으로 이동&lt;br /&gt;왼쪽 빈자리는 최상위 부호 비트와 같은 값으로 채움&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;a »&amp;gt; b&lt;/td&gt;
      &lt;td&gt;a의 각 비트를 b만큼 오른쪽으로 이동&lt;br /&gt;왼쪽 빈자리는 0으로 채움&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;대입-연산자&quot;&gt;대입 연산자&lt;/h3&gt;

&lt;p&gt;대입 연산자는 우측 피연산자의 값을 좌측 피연산자의 변수에 대입한다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;연산식&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;=&lt;/td&gt;
      &lt;td&gt;우측의 피연산자의 값을 변수에 저장&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;+=&lt;/td&gt;
      &lt;td&gt;우측의 피연산자의 값을 변수의 값과 더한 후에 다시 변수에 저장&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-=&lt;/td&gt;
      &lt;td&gt;우측의 피연산자의 값을 변수의 값에서 뺀 후에 다시 변수에 저장&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;*=&lt;/td&gt;
      &lt;td&gt;우측의 피연산자의 값을 변수의 값과 곱한 후에 다시 변수에 저장&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/=&lt;/td&gt;
      &lt;td&gt;우측의 피연산자의 값을 변수의 값과 나눈 후에 다시 변수에 저장&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;%=&lt;/td&gt;
      &lt;td&gt;우측의 피연산자의 값으로 변수의 값을 나눈 후에 나머지를 변수에 저장&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&amp;amp;=&lt;/td&gt;
      &lt;td&gt;우측의 피연산자의 값과 변수의 값을 &amp;amp; 연산 후 결과를 변수에 저장&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;|=&lt;/td&gt;
      &lt;td&gt;우측의 피연산자의 값과 변수의 값을 | 연산 후 결과를 변수에 저장&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;^=&lt;/td&gt;
      &lt;td&gt;우측의 피연산자의 값과 변수의 값을 ^ 연산 후 결과를 변수에 저장&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;삼항-연산자&quot;&gt;삼항 연산자&lt;/h3&gt;

&lt;p&gt;삼항 연산자는 3개의 항을 가져 삼항 연산자라고 불립니다.&lt;/p&gt;

&lt;p&gt;삼항 연산자의 식은 &lt;strong&gt;(조건식(피연산자1) ? 값 OR 연산식(피연산자2) : 값 OR 연산식(피연산자3) )&lt;/strong&gt; 으로 되어있습니다.&lt;/p&gt;

&lt;p&gt;조건식이 true이면 피연산자2가 선택되고, false이면 피연산자3이 선택됩니다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Thu, 22 Jun 2023 22:30:00 +0900</pubDate>
        <link>http://localhost:4000/java/2023/06/22/java-operator.html</link>
        <guid isPermaLink="true">http://localhost:4000/java/2023/06/22/java-operator.html</guid>
        
        
        <category>java</category>
        
      </item>
    
      <item>
        <title>[Java] 변수</title>
        <description>&lt;h1 id=&quot;변수variable&quot;&gt;변수(Variable)&lt;/h1&gt;

&lt;h2 id=&quot;변수란&quot;&gt;변수란?&lt;/h2&gt;

&lt;p&gt;변수는 데이터의 저장과 참조를 위해 할당된 메모리 공간에 붙인 이름을 의미합니다.&lt;/p&gt;

&lt;p&gt;자바의 변수는 다양한 타입의 값을 저장할 수 없습니다. 정수형 변수에는 정수값만 저장할 수 있고, 실수형
변수에는 실수값만 저장할 수 있습니다.&lt;/p&gt;

&lt;p&gt;변수를 사용하려면 변수 선언이 필요합니다. 변수 선언은 어떤 타입의 데이터를 저장할 것인지 그리고 변수 이름이 무엇인지를 결정하는 것입니다.&lt;/p&gt;

&lt;h2 id=&quot;변수-이름-짓기&quot;&gt;변수 이름 짓기&lt;/h2&gt;

&lt;p&gt;변수 이름은 문자(대문자, 소문자), 숫자, 달러 기호($) 및 밑줄 문자(_)로 구성될 수 있습니다.&lt;/p&gt;

&lt;p&gt;변수의 첫 문자는 문자, 밑줄 또는 달러 기호여야 합니다. 숫자로 시작하면 안 됩니다.&lt;/p&gt;

&lt;p&gt;일반적으로 변수 이름은 문자로 시작하고 첫 문자를 소문자로 시작하는 카멜 케이스로 작성합니다.&lt;/p&gt;

&lt;p&gt;카멜 케이스란 여러 단어로 변수 명을 지을 때 단어들을 공백없이 붙이고, 첫 단어의 첫 문자는 소문자로 시작하고 다음 단어들의 첫 단어는 대문자로 시작하는 표기법입니다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;camelCase&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;자료형&quot;&gt;자료형&lt;/h2&gt;

&lt;h3 id=&quot;정수-타입&quot;&gt;정수 타입&lt;/h3&gt;

&lt;p&gt;자바는 byte(1byte), char(2byte), short(2byte), int(4byte), long(8byte) 5가지 정수타입이 있습니다.&lt;/p&gt;

&lt;p&gt;byte, short, int, long은 모두 부호가 있는 정수 타입입니다. 최상위 bit는 부호 bit로 사용되고, 나머지 bit는 값의 범위를 결정합니다.&lt;/p&gt;

&lt;p&gt;long 타입은 보통 수치가 큰 데이터를 다루는 프로그램에서 사용됩니다. 자바에서 long 타입을 사용할 때 뒤에 소문자 ‘l’이나 ‘L’을 붙여 컴파일러에게 알려줘야 합니다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;65&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100000000000L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;문자-타입&quot;&gt;문자 타입&lt;/h3&gt;

&lt;p&gt;하나의 문자를 작은따옴표(‘)로 감싼 것을 문자 리터럴이라고 합니다. 문자 리터럴은 유니코드로 변환되어 저장되는데 자바는 이러한 유니코드를 저장할 수 있도록 char 타입을 제공합니다.&lt;/p&gt;

&lt;p&gt;유니코드가 정수이므로 char 타입도 정수 타입에 속합니다. 그렇기 때문에 char 변수에 작은따옴표로 감싼 문자가 아니라 유니코드 숫자를 직접 대입할 수도 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;&apos;A&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;65&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;실수-타입&quot;&gt;실수 타입&lt;/h3&gt;

&lt;p&gt;실수 타입에는 float과 double이 있습니다. float은 4byte의 크기를 가지고, double은 8byte의 크기를 가집니다. double은 float 타입보다 큰 실수를 저장할 수도 있고 정밀도 또한 높습니다.&lt;/p&gt;

&lt;p&gt;컴파일러는 실수 리터럴을 기본적으로 double 타입으로 해석하기 때문에 double 타입 변수에 대입해야 합니다. float 타입에 대입하고 싶다면 리터럴 뒤에 소문자 ‘f나 대문자 ‘F’를 붙여 컴파일러가 float 타입임을 알 수 있도록 해야 합니다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.14&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.14f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;논리-타입&quot;&gt;논리 타입&lt;/h3&gt;

&lt;p&gt;논리 타입은 참과 거짓을 표현하기 위한 타입입니다.&lt;/p&gt;

&lt;p&gt;boolean 타입의 변수에 논리 리터럴 true 또는 false를 대입할 수 있습니다.&lt;/p&gt;

&lt;p&gt;boolean 타입 변수는 보통 조건문과 제어문의 실행 흐름을 변경하는 데 사용됩니다. 연산식 중에서 비교 및 논리 연산의 산출값은 true 또는 false 이므로 이를 이용해 실행 흐름을 변경합니다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;문자열-타입&quot;&gt;문자열 타입&lt;/h3&gt;

&lt;p&gt;큰따옴표(“)로 감싼 문자들을 문자열이라고 합니다. 이런 문자열을 변수에 저장하고 싶다면 String 타입을 사용하여 문자열을 저장합니다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;문자열입니다&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;자바 13부터는 텍스트 블록 문법을 제공합니다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
  문자열
  입니다.
  &quot;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같이 큰따옴표 3개로 감싸면 이스케이프 문자를 사용해서 줄바꿈을 할 필요없이 작성된 그대로 문자열이 저장됩니다.&lt;/p&gt;

&lt;h2 id=&quot;타입-변환&quot;&gt;타입 변환&lt;/h2&gt;

&lt;h3 id=&quot;자동-타입-변환&quot;&gt;자동 타입 변환&lt;/h3&gt;

&lt;p&gt;자동 타입 변환이란 말 그대로 자동으로 타입 변환이 일어나는 것을 말합니다. 자동 타입 변환은 값의 허용 범위가 작은 타입이 허용 범위가 큰 타입으로 대입될 때 발생합니다.&lt;/p&gt;

&lt;p&gt;자료형의 크기에 상관없이 정수 타입보다 실수 타입이 우선됩니다. 이유는 정수 타입에 비해 실수 타입이 값의 표현 범위가 넓기 때문입니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;기본 타입 허용 범위 순&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;byte &amp;lt; short, char &amp;lt; int &amp;lt; long &amp;lt; float &amp;lt; double
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;자동 타입 변환&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;자동 타입 변환에서 예외가 있습니다. char 타입보다 허용 범위가 작은 byte 타입은 char 타입으로 자동 변환될 수 없습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;연산식에서 자동 타입 변환&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;자바에서는 byte, short 타입의 변수는 int 타입으로 자동 타입 변환되어 연산을 수행합니다. 변수에 저장할 값이 작더라도 연산이 동반되면 변수의 타입을 byte, short보다 int 타입으로 선언하는 것이 성능에 좋습니다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//컴파일 에러&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;강제-타입-변환&quot;&gt;강제 타입 변환&lt;/h3&gt;

&lt;p&gt;허용 범위가 큰 타입을 허용 범위가 작은 타입으로 쪼개어서 저장하는 것을 강제 타입 변환이라고 합니다. 강제 타입 변환을 하면 범위가 큰 타입의 상위 바이트가 잘려 나가기 때문에 유효한 데이터가 존재하는 경우 알 수 없는 값으로 변환이 되므로 주의가 필요합니다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// -24&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Thu, 22 Jun 2023 19:30:00 +0900</pubDate>
        <link>http://localhost:4000/java/2023/06/22/java-variable.html</link>
        <guid isPermaLink="true">http://localhost:4000/java/2023/06/22/java-variable.html</guid>
        
        
        <category>java</category>
        
      </item>
    
      <item>
        <title>[Java] 자바 시작하기</title>
        <description>&lt;h1 id=&quot;자바-시작하기&quot;&gt;자바 시작하기&lt;/h1&gt;

&lt;h2 id=&quot;개발-환경-설정하기-윈도우10&quot;&gt;개발 환경 설정하기 (윈도우10)&lt;/h2&gt;

&lt;h3 id=&quot;openjdk-17-다운로드-및-설치하기&quot;&gt;OpenJDK 17 다운로드 및 설치하기&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://jdk.java.net/java-se-ri/17&quot;&gt;https://jdk.java.net/java-se-ri/17&lt;/a&gt; 에서 JDK를 다운로드합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;원하는 장소에 압출 파일을 풉니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;시작 버튼 옆 검색 창에 “시스템 환경 변수 편집”을 검색 후 클릭합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;시스템 속성 창이 열렸다면 [환경 변수]을 클릭합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;시스템 변수의 [새로 만들기]를 클릭하고, 나타나는 화면에서 다음과 같이 입력 후 확인 버튼을 누릅니다.&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; 변수 이름: JAVA_HOME
 변수 값: 다운받은 파일의 압축을 푼 OpenJDK의 경로
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그 다음 변수 목록에서 “Path” 변수를 찾아 [편집]을 누릅니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;편집 창이 나타나면 [새로 만들기]를 클릭한 후 “%JAVA_HOME%\bin” 입력하고 확인 버튼을 눌러 열려있던 창을 모두 닫아줍니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;명령 프롬프트를 열어 다음 명령어를 입력해 설정이 완료되었는지 확인합니다.&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ java -version
openjdk version &quot;17.0.4.1&quot; 2022-08-12 LTS
OpenJDK Runtime Environment (build 17.0.4.1+1-LTS)
OpenJDK 64-Bit Server VM (build 17.0.4.1+1-LTS, mixed mode, sharing)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;자바-실행하기&quot;&gt;자바 실행하기&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;메모장을 열어 다음과 같이 입력 후 파일 이름을 “Hello.java”로 저장을 합니다.&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class Hello {
  public static void main(String args[]) {
    System.out.println(&quot;Hello World!&quot;);
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;명령 프롬프트를 열어 작성한 파일의 경로로 이동 후 “javac Hello.java”을 입력합니다.&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;파일 경로&amp;gt;javac Hello.java
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;오류 없이 실행이 되었다면 파일이 있던 위치에 “Hello.class” 파일이 생성되었는지 확인합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일이 생성되었다면 명령 프롬프트에 다음과 같이 입력 후 “Hello World!”가 출력되었다면 성공입니다.&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;파일 경로&amp;gt;java Hello
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 22 Jun 2023 13:50:00 +0900</pubDate>
        <link>http://localhost:4000/java/2023/06/22/java-getting-started.html</link>
        <guid isPermaLink="true">http://localhost:4000/java/2023/06/22/java-getting-started.html</guid>
        
        
        <category>java</category>
        
      </item>
    
      <item>
        <title>[MySQL] MySQL</title>
        <description>&lt;h1 id=&quot;mysql&quot;&gt;MySQL&lt;/h1&gt;

&lt;h3 id=&quot;mysql-1&quot;&gt;MySQL&lt;/h3&gt;

&lt;p&gt;MySQL은 Oracle에서 개발하여 널리 사용되는 관계형 데이터베이스 관리 시스템(RDBMS)입니다. 다양한 애플리케이션에서 구조화된 데이터를 관리하기 위한 도구 역할을 합니다.&lt;/p&gt;

&lt;h3 id=&quot;mysql-특징&quot;&gt;MySQL 특징&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;데이터베이스 관리 시스템&lt;/strong&gt;: MySQL은 사용자가 데이터베이스를 생성, 구성 및 관리할 수 있는 데이터베이스 관리 시스템입니다. 데이터베이스는 단순한 목록에서 복잡한 시스템에 이르기까지 다양할 수 있는 구조화된 데이터 모음입니다. MySQL은 데이터 저장, 검색 및 조작을 위한 강력하고 효율적인 플랫폼을 제공합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;관계형 데이터베이스&lt;/strong&gt;: MySQL은 데이터를 미리 정의된 관계가 있는 테이블로 구성하기 때문에 관계형 데이터베이스 관리 시스템으로 분류됩니다. 데이터가 행(레코드)과 열(속성)로 구성된 테이블에 저장되는 관계형 모델의 원칙을 따릅니다. 이러한 테이블은 기본 및 외래 키 제약 조건을 통해 서로 관련될 수 있으므로 효율적인 데이터 검색 및 조작이 가능합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;구조적 쿼리 언어(SQL)&lt;/strong&gt;: MySQL은 데이터베이스 관리를 위한 표준 언어로 SQL(구조적 쿼리 언어)을 사용합니다. SQL은 데이터베이스 생성, 수정 및 쿼리를 위한 다양한 명령 및 구문 세트를 제공합니다. 사용자는 SQL 문을 사용하여 MySQL 데이터베이스와 상호 작용하고 데이터 삽입, 업데이트, 삭제 및 검색과 같은 작업을 수행하고 복잡한 쿼리를 정의하여 데이터베이스에서 특정 정보를 추출할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;클라이언트/서버 아키텍처&lt;/strong&gt;: MySQL은 클라이언트/서버 아키텍처에서 작동합니다. MySQL 서버는 데이터베이스 저장 및 관리를 담당하고 클라이언트 애플리케이션은 서버에 연결하여 데이터와 상호 작용합니다. 명령줄 도구, 그래픽 사용자 인터페이스 또는 웹 기반 애플리케이션과 같은 여러 클라이언트 프로그램이 동시에 MySQL 서버에 액세스할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;확장성 및 성능&lt;/strong&gt;: MySQL은 확장성 및 성능 기능으로 유명합니다. 소규모에서 대규모 애플리케이션까지 처리할 수 있으며 높은 동시 사용자 액세스를 지원합니다. MySQL은 다양한 최적화 기술, 캐싱 메커니즘 및 인덱싱 옵션을 제공하여 성능을 개선하고 효율적인 데이터 검색을 보장합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;오픈 소스&lt;/strong&gt;: MySQL은 오픈 소스 소프트웨어이므로 GNU GPL(일반 공중 사용 허가서)의 조건에 따라 자유롭게 사용, 수정 및 배포할 수 있습니다. 오픈 소스 특성은 광범위한 채택, 적극적인 커뮤니티 지원, 주변에 구축된 도구 및 프레임워크의 방대한 생태계에 기여했습니다.&lt;/p&gt;
</description>
        <pubDate>Wed, 21 Jun 2023 18:45:00 +0900</pubDate>
        <link>http://localhost:4000/db/2023/06/21/mysql-overview.html</link>
        <guid isPermaLink="true">http://localhost:4000/db/2023/06/21/mysql-overview.html</guid>
        
        <category>mysql</category>
        
        
        <category>db</category>
        
      </item>
    
      <item>
        <title>[Java] 자바란?</title>
        <description>&lt;h1 id=&quot;자바&quot;&gt;자바&lt;/h1&gt;

&lt;h3 id=&quot;자바란&quot;&gt;자바란?&lt;/h3&gt;

&lt;p&gt;썬 마이크로시스템즈에서 1995년에 개발한 객체 지향 프로그래밍 언어이다.&lt;/p&gt;

&lt;h3 id=&quot;자바-특징&quot;&gt;자바 특징&lt;/h3&gt;

&lt;p&gt;자바는 클래스 기반의 객체 지향 프로그래밍 언어입니다.&lt;/p&gt;

&lt;p&gt;자바는 JVM(Java Virtual Machine)이 설치된 모든 플랫폼에서 실행할 수 있는 바이트코드로 컴파일할 수 있습니다. 이러한 플랫폼 독립성은 Java 응용 프로그램을 다양한 운영체제 및 하드웨어 아키텍처에서 이식할 수 있도록 합니다.&lt;/p&gt;

&lt;p&gt;자바는 더 이상 사용되지 않는 프로그램의 메모리를 자동으로 해제합니다. 따라서 따로 메모리를 관리하지 않아도 되므로, 프로그래밍을 쉽게 할 수 있도록 도와줍니다.&lt;/p&gt;

&lt;h3 id=&quot;객체-지향-프로그래밍oop&quot;&gt;객체 지향 프로그래밍(OOP)&lt;/h3&gt;

&lt;p&gt;객체 지향 프로그래밍은 데이터와 코드를 결합하는 객체 개념을 중심으로 소프트웨어 설계를 구성하고 구조화하는 데 중점을 둔 프로그래밍 패러다임입니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;객체 지향 프로그램이 핵심 원칙&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;캡슐화(Encapsulation)&lt;/strong&gt;: 캡슐화란 데이터와 코드의 형태를 외부로부터 알 수 없게하고, 데이터의 구조와 역할, 기능을 하나의 캡슐형태로 만드는 방법입니다.&lt;/p&gt;

&lt;p&gt;자바에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;private&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;protected&lt;/code&gt; 및 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;default&lt;/code&gt; 와 같은 접근 제한자를 통해 필요한 정보만 외부로 노출시킬 수 있습니다. 또 다른 방법으로 모든 속성을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;private&lt;/code&gt; 접근 제한자로 선언을 한 후 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getter/setter&lt;/code&gt; 메서드를 통해 외부에서의 접근을 선택적으로 허용할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;상속(Inheritance)&lt;/strong&gt;: 상속이란 기존 상위클래스에 기능을 가져와 재사용할 수 있으면서도 동시에 하위 클래스에 새로운 기능도 추가할 수 있는 것입니다.&lt;/p&gt;

&lt;p&gt;자바에서 “eat()” 메서드가 정의되어 있는 “Animal” 클래스가 있다면 “Dog” 클래스는 “Animal” 클래스를 상속받아 “eat()” 메소드를 재사용하여 코드 중복을 줄이고 “bark()”라는 새로운 기능도 추가할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;다향성(Polymorphism)&lt;/strong&gt;: 다형성을 사용하면 다른 유형의 객체를 공통 상위 클래스의 객체로 취급할 수 있습니다. 이를 통해 코드를 일반적이고 유연한 방식으로 작성할 수 있습니다. 객체를 상호 교환하여 사용할 수 있으므로 코드 재사용 및 코드를 유연하게 사용할 수 있는 방법이 제공됩니다.&lt;/p&gt;

&lt;p&gt;자바에서 대표적인 다향성의 예로 오버라이딩과 오버로딩 있습니다. 오버라이딩은 부모 클래스의 메소드를 재정의한다고 생각하면 됩니다. 만약 “Dog”, “Cat” 클래스가 “makeSound()”라는 메서드를 가지고 있는 “Animal” 클래스를 상속받는다고 하겠습니다. 상속받은 “Dog” 클래스는 “makeSound()” 메서드의 구현부를 “멍멍 소리를 내다”로 재정의 할 수 있고, “Cat” 클래스는 “냐옹 소리를 내다”로 재정의 할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;추상화(Abstraction)&lt;/strong&gt;: 객체의 공통적인 속성과 기능을 추출하여 정의하는 것입니다. 추상화를 통해 프로그래머는 구현 세부 정보를 지정하지 않고 객체의 공통 속성 및 동작을 정의하는 추상 클래스 또는 인터페이스를 만들 수 있습니다.&lt;/p&gt;

&lt;p&gt;자바에서 “calculateArea()” 메소드가 있는 “Shape” 추상 클래스가 정의되어 있다면, “Rectagle” 클래스는 “Shape” 클래스를 확장하여 “calculateArea()” 메서드의 구현부를 “가로x세로”와 같이 자체 구현할 수 있습니다.&lt;/p&gt;
</description>
        <pubDate>Wed, 21 Jun 2023 17:50:00 +0900</pubDate>
        <link>http://localhost:4000/java/2023/06/21/java-overview.html</link>
        <guid isPermaLink="true">http://localhost:4000/java/2023/06/21/java-overview.html</guid>
        
        
        <category>java</category>
        
      </item>
    
      <item>
        <title>[JavaScript] javascript란?</title>
        <description>&lt;h1 id=&quot;javascript&quot;&gt;JavaScript&lt;/h1&gt;

&lt;h3 id=&quot;javascript란-무엇인가&quot;&gt;JavaScript란 무엇인가?&lt;/h3&gt;

&lt;p&gt;자바스크립트는 웹 페이지에 생동감과 복잡한 기능을 구현할 수 있도록 하는 스크립팅 언어 또는 프로그래밍 언어입니다.&lt;/p&gt;

&lt;p&gt;처음에는 웹 브라우저에서 클라이언트 측 스크립팅 기능을 제공하기 위해 개발되었지만 시간이 지남에 따라 브라우저뿐만 아니라 서버, 데스크탑 애플리케이션 및 모바일 앱 개발을 할 수 있게 되었습니다.&lt;/p&gt;

&lt;h3 id=&quot;자바스크립트가-브라우저에서-할-수-있는-일&quot;&gt;자바스크립트가 브라우저에서 할 수 있는 일&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;자바스크립트가 브라우저에서 할 수 있는 일&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;웹 페이지의 DOM(Document Object Model) API를 통해 HTML과 CSS를 동적으로 수정, 사용자 인터페이스를 업데이트할 수 있습니다. 이를 통해 양식 유효성 검사, 이미지 슬라이더, 드롭 다운 메뉴 등과 같은 기능을 만들 수 있습니다.
&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;마우스 클릭이나 포인터의 움직임, 키보드 키 눌림 등과 같은 이벤트를 처리할 수 있습니다. 이를 통해 웹 페이지의 특정 요소에 이벤트 핸들러를 연결하여 특정 이벤트가 발생할 때 페이지가 응답하는 방식 등을 구현할 수 있습니다.
&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;네트워크를 통해 원격 서버에 요청을 보내거나, 파일 다운로드, 업로드 등을 할 수 있습니다.
&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;로컬 스토리지 및 세션 스토리지 등을 이용하여 클라이언트 측에 데이터 저장할 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;웹-페이지에-자바스크립트-넣기&quot;&gt;웹 페이지에 자바스크립트 넣기&lt;/h3&gt;

&lt;p&gt;웹 페이지에 자바스크립트를 넣는 방식은 내부, 외부 방식이 있습니다.&lt;/p&gt;

&lt;p&gt;내부 방식은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 태그를 사용해서 HTML 파일 내 자바스크립트 코드를 직접 삽입하는 방법입니다.
HTML 문서의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 또는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 태그 내에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 태그를 배치하면 됩니다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Hello World&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Hello World&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;외부 방식은 확장자가 .js인 자바스립트 파일을 만들어. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 태그의 src 속성을 사용하여 파일을 참조하는 방식입니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// hello.js&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Hello Word&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Hello World&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hello.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;이벤트-처리&quot;&gt;이벤트 처리&lt;/h3&gt;

&lt;p&gt;자바스크립트를 이용하여 이벤트를 처리하는 방법은 두 가지가 있습니다.&lt;/p&gt;

&lt;p&gt;예시로 HTML &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 요소에 클릭 이벤트가 발생했을 때 콘솔 창에 “Hello World”를 출력해보겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;인라인으로 처리하기 (권장하지 않음)&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Hello World&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onclick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;clickBtn()&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;눌러&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clickBtn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Hello World&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;addEventListener 사용하기&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Hello World&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&amp;gt;&lt;/span&gt;눌러&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;buttons&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;buttons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clickBtn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clickBtn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Hello World&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;HTML 태그 요소 안에 자바스크립트 코드를 사용하는 방법은 권장하지 않습니다. 왜냐하면 같은 기능이 필요한 버튼이 있을 때 모든 버튼마다 일일히 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;onclick=&quot;clickBtn()&quot;&lt;/code&gt;를 추가해야 하는 것은 비효율적이기 때문입니다.&lt;/p&gt;
</description>
        <pubDate>Wed, 21 Jun 2023 03:15:00 +0900</pubDate>
        <link>http://localhost:4000/javascript/2023/06/21/javascript-overview.html</link>
        <guid isPermaLink="true">http://localhost:4000/javascript/2023/06/21/javascript-overview.html</guid>
        
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>[Spring Boot] Spring Boot 시작하기</title>
        <description>&lt;h1 id=&quot;spring-boot&quot;&gt;Spring Boot&lt;/h1&gt;

&lt;h2 id=&quot;spring-boot를-사용하는-이유&quot;&gt;Spring Boot를 사용하는 이유&lt;/h2&gt;

&lt;p&gt;스프링 부트는 스프링 프레임워크에 비해 설정이 간단하며 서버를 내장하고 있어 애플리케이션을 독립적으로 사용할 수 있고 외부 서버에 배포할 필요가 없습니다.&lt;/p&gt;

&lt;h2 id=&quot;spring-boot-시작하기&quot;&gt;Spring Boot 시작하기&lt;/h2&gt;

&lt;h3 id=&quot;1-자바-설치-확인하기&quot;&gt;1. 자바 설치 확인하기&lt;/h3&gt;

&lt;p&gt;터미널을 열고 다음 명령어를 실행해서 Java가 설치되어 있는지 확인합니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ java -version
openjdk version &quot;17.0.4.1&quot; 2022-08-12 LTS
OpenJDK Runtime Environment (build 17.0.4.1+1-LTS)
OpenJDK 64-Bit Server VM (build 17.0.4.1+1-LTS, mixed mode, sharing)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;2-스프링-프로젝트-생성&quot;&gt;2. 스프링 프로젝트 생성&lt;/h3&gt;

&lt;p&gt;먼저 spring initializr를 이용하여 스프링 부트 프로젝트를 만듭니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://start.spring.io/&quot;&gt;https://start.spring.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;링크에 접속해 아래와 같이 설정을 한 후 GENERATE를 누릅니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Project
    &lt;ul&gt;
      &lt;li&gt;gradle - Groovy&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Language
    &lt;ul&gt;
      &lt;li&gt;Java&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Spring Boot
    &lt;ul&gt;
      &lt;li&gt;3.1.0&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Packaging
    &lt;ul&gt;
      &lt;li&gt;Jar&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Java
    &lt;ul&gt;
      &lt;li&gt;17&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Dependencies
    &lt;ul&gt;
      &lt;li&gt;Spring Web&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;GENERATE를 눌러 압축 파일이 생성되었다면 압축을 풀어줍니다.&lt;/p&gt;

&lt;p&gt;압축을 풀었다면 vscode, intellij 같은 개발 환경에서 프로젝트를 열어줍니다.&lt;/p&gt;

&lt;h3 id=&quot;3-hello-world-출력하기&quot;&gt;3. Hello World 출력하기&lt;/h3&gt;

&lt;p&gt;프로젝트가 정상적으로 열렸다면 src/main/java/…/DemoApplication.java 파일을 열어 다음과 같이 수정합니다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@RestController&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@SpringBootApplication&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DemoApplication&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;SpringApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;DemoApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같이 수정하였으면 애플리케이션을 실행합니다. 실행 후 브라우저에 접속하여 url 입력창에 “http://localhost:8080” 을 입력하여 “Hello World!” 문구가 보인다면 성공입니다.&lt;/p&gt;

&lt;p&gt;@RestController는 여기로 HTTP 요청을 처리하고 반환 데이터는 Json 형태로 반환한다는 뜻으로 생각하면 됩니다. @RequstMapping은 특정 url이나 url 패턴을 이 메서드에 매핑한다는 뜻입니다.&lt;/p&gt;

&lt;p&gt;스프링 부트를 사용하면 이와 같이 따로 서버를 설치 및 설정하지도 않고 간단한 설정만으로 웹 애플리케이션을 만들고 실행할 수 있는 장점이 있습니다.&lt;/p&gt;
</description>
        <pubDate>Wed, 21 Jun 2023 01:45:00 +0900</pubDate>
        <link>http://localhost:4000/spring/2023/06/21/boot-getting-started.html</link>
        <guid isPermaLink="true">http://localhost:4000/spring/2023/06/21/boot-getting-started.html</guid>
        
        <category>boot</category>
        
        
        <category>spring</category>
        
      </item>
    
      <item>
        <title>[Spring Framework] Spring Framework란?</title>
        <description>&lt;h1 id=&quot;spring-framework란&quot;&gt;Spring Framework란?&lt;/h1&gt;

&lt;h2 id=&quot;spring-framework란-1&quot;&gt;Spring Framework란?&lt;/h2&gt;

&lt;p&gt;스프링은 자바 프로그래밍을 더 빠르고 쉽고 안전하게 만들기 위한 프레임워크입니다.&lt;/p&gt;

&lt;h2 id=&quot;핵심-개념&quot;&gt;핵심 개념&lt;/h2&gt;

&lt;h3 id=&quot;iocinversion-of-control-컨테이너&quot;&gt;IoC(Inversion of Control) 컨테이너&lt;/h3&gt;

&lt;p&gt;IoC 컨테이너는 Bean의 인스턴스화, 구성 및 조립을 담당합니다.&lt;/p&gt;

&lt;p&gt;스프링의 IoC 컨테이너는 애플리케이션이 시작되면 XML, 어노테이션 또는 Java 클래스의 메타데이터를 활용하여 객체를 생성, 인스턴스화 및 의존성 주입을 처리하여 개발자가 명시적으로 관리하지 않도록 합니다.&lt;/p&gt;

&lt;h3 id=&quot;didependency-injection-의존성-주입&quot;&gt;DI(Dependency Injection, 의존성 주입)&lt;/h3&gt;

&lt;p&gt;DI란 사용할 객체를 직접 생성하지 않고 외부 컨테이너가 생성한 객체를 주입받아 사용하는 방식입니다.&lt;/p&gt;

&lt;p&gt;스프링 프레임워크에서는 세 가지 방법으로 의존성을 주입합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;생성자를 통한 의존성 주입&lt;/li&gt;
  &lt;li&gt;세터 메서드를 통한 의존성 주입&lt;/li&gt;
  &lt;li&gt;필드에 직접 의존성 주입&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;DI의 이점 중 하나는 의존성 관리를 IoC 컨테이너에 위임함으로써 객체를 구체적인 구현이 아닌 추상화에 의존하여 구성 요소 간의 느슨한 결합이 촉진됩니다. 이를 통해 개별 구성 요소의 격리된 테스트가 가능하므로 단위 테스트를 보다 쉽게 작성할 수 있습니다.&lt;/p&gt;

&lt;h3 id=&quot;aopaspect-oriented-programming&quot;&gt;AOP(Aspect-Oriented Programming)&lt;/h3&gt;

&lt;p&gt;AOP는 애플리케이션의 핵심 비즈니스 논리에서 횡단 관심사(공통 관심사)를 분리하기 위한 프로그래밍 패러다임입니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AOP의 핵심 개념&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Aspect: 공통 관심사를 모듈화 한 것으로 일반적으로 애플리케이션의 여러 객체 또는 모듈에 적용되어야 하는 특정 동작 또는 작업을 정의합니다.&lt;/li&gt;
  &lt;li&gt;Join Point: 조인 포인트는 Aspect가 적용 될 수 있는 특정 포인트를 나타냅니다. 조인 포인트의 예로는 메서드 호출, 예외 처리, 제어 흐름의 특정 지점이 있습니다.&lt;/li&gt;
  &lt;li&gt;Advice: 조인 포인트에 도달했을 때 발생해야 하는 일을 정의합니다. 일반적인 유형의 어드바이스는 “before”, “after”, “around”, “after-throwing” 그리고 “after-returning”이 있습니다.&lt;/li&gt;
  &lt;li&gt;Pointcut: 애플리케이션에서 어떤 조인 포인트를 가로채고 관련 어드바이스를 적용해야 하는지 결정하는 표현식입니다. 이를 통해 개발자는 Aspect의 정확한 위치 또는 조건을 지정할 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;주요-기능&quot;&gt;주요 기능&lt;/h2&gt;

&lt;h3 id=&quot;스프링-mvc&quot;&gt;스프링 MVC&lt;/h3&gt;

&lt;p&gt;Spring MVC(Model-View-Controller)는 웹 애플리케이션 구축에 대한 구조화된 접근 방식을 제공하는 웹 프레임워크입니다. Spring MVC는 웹 개발을 단순화하기 위한 다양한 기능을 제공합니다. 컨트롤러가 요청 처리를 위해 특정 URL 또는 URL 패턴을 메서드에 매핑할 수 있는 요청 매핑 기능 등이 있습니다. MVC(Model-View-Controller) 아키텍처 패턴을 따르며 애플리케이션을 세 가지 주요 구성 요소(모델, 뷰, 컨트롤러)로 구분합니다.&lt;/p&gt;

&lt;p&gt;모델은 애플리케이션의 데이터 및 비즈니스 로직을 나타냅니다. 애플리케이션의 데이터, 상태 및 동작을 캡슐화합니다. Spring MVC에서 모델은 일반적으로 애플리케이션 데이터를 보유하고 데이터베이스 또는 데이터 소스와 상호 작용하는 Java클래스 또는 POJO(Plain Old Java Objects)로 구성됩니다.&lt;/p&gt;

&lt;p&gt;뷰는 사용자에게 데이터를 제공하는 역할을 합니다. 애플리케이션 사용자 인터페이스의 시각적 표현을 정의합니다. Spring MVC에서 뷰는 JSP, Thymeleaf 와 같은 템플릿 기술을 사용하여 구현됩니다. 뷰는 클라이언트로 다시 전송되는 응답을 렌더링하는 역할을 합니다.&lt;/p&gt;

&lt;p&gt;컨트롤러는 모델과 뷰 사이의 중개자 역할을 합니다. 사용자 요청을 수신 및 처리하고, 필요한 처리를 수행하고, 응답을 생성하는 데 사용할 적절한 모델과 뷰를 결정합니다. Spring MVC의 컨트롤러는 Java 클래스로 구현되며 HTTP 요청 처리, 양식 데이터 처리, 비즈니스 로직 호출 및 뷰에서 렌더링할 모델 준비를 담당합니다.&lt;/p&gt;
</description>
        <pubDate>Tue, 20 Jun 2023 16:40:00 +0900</pubDate>
        <link>http://localhost:4000/spring/2023/06/20/framework01.html</link>
        <guid isPermaLink="true">http://localhost:4000/spring/2023/06/20/framework01.html</guid>
        
        <category>framework</category>
        
        
        <category>spring</category>
        
      </item>
    
  </channel>
</rss>
